[BASEBALL_ADVANCED_SETTINGS]
//BALL_DETECTION_SEARCH_LEN, int, 10		//Number of frames to look for ball around current frame (relevant for RUN_WITH_BALL state)
//CONSIDER_3RD_TO_HOME_RUN, bool, true
//DISABLE_UNKNOWN_GAMEACTION, bool, false
//FRAC_MAX_JUMP_DISTANCE_FOR_BALL, double, 0.2
//HD_MASK_PATH, string, ./		//full path (folder) to where to dump the Video HD Mask
//HOMEPLATE_SIDELINES_FRACTION, double, 0.6		//Fraction of the side lines of the homeplate to be visible during pitch 
//LAST_RUNBALL_CONSIDER_SEC, float, 10.0		//Number of seconds to till last run-ball locatiion becomes invalid
//MAX_DISTANCE_FROM_LINE_FOR_RUN, double, 2.5		//Max distance [meters] for a player to run near a line in order to detect a "run frame"
//MAX_RELATIVE_DISTANCE_FROM_BASE_FOR_RUN, double, 0.6		//Max relative distance on line {where 0.0 is start base and 1.0 is end base} for a player to run in order to detect a "run frame"
//MIN_SCORE_FOR_HOMEPLATE_ACTIVITY, double, 0.0		//Minimal score for detecting activity inside the home plate
//MIN_SCORE_FOR_PITCHERS_MOUND_ACTIVITY, double, 0.6		//Minimal score for detecting activity inside the picher's mound
//MIN_SCORE_FOR_RUN_DETECTION, double, 0.5		//Minimal score for considering a "run detection"
//MIN_VELOCITY_SQUARED_FOR_RUN, double, 9.0		//Minimal player squared velocity to be considered for a run
//MIN_WEIGHT_FOR_HOMEPLATE, double, 1.5		//Minimal weight for detecting activity in the home plate
//PITCH_BOTTOM_TO_MIDDLE_FRACTION, double, 0.35		//Fractional location of the frame center in PITCH state (between the home plate and the pitcher's mound)
//PITCH_HEIGHT_FRACTION, double, 1.8		//Fractional frame height in PITCH state (1.0 means: frame height fits exactly from pitchers mound to home plate)
//PITCH_SIDEBASE_TO_HOMEPLATE_FRACTION, double, 0.6		//Fraction along lines connecting sidebase to homeplate for determining PITCH game-action framewidth
//RUN_FADEOUT_SEC, float, 10.0		//Number of seconds to keep RUN_NO_BALL state
//RUNBALL_DELAY_SEC, float, 0.5		//Delay for switching from PITCH state into RUN_WITH_BALL state. Especially useful when using scene-cut logic
//RUNBALL_FADEOUT_SEC, float, 5.0		//Number of seconds to keep RUN_WITH_BALL state
//ZOOM_CHANGE_RATIO, double, 0.25		//Controls the update speed in the frame size (i.e., its zoom). value between 0 (keep constant) to 1 (update instantly)
//ZOOM_OUT_DURING_RUN, bool, True

[BASKETBALL_ADVANCED_SETTINGS]
//ACTIVITY_TH, int, 60
//ALLOW_GOING_BACKWARDS, bool, true
//BACKGROUND_PRECENT_CHANGE_ALLOWED, double, 25.0		//Max percent of foreground pixels allowed 
//BGD_BACKGROUNDRATIO, float, 0.8
//BGD_HISTORY, int, 800
//BGD_LEARNING_RATE, float, 0.005
//BGD_SET_FROM_FILE, bool, true
//BGD_SHADOW_DETECTION, bool, true
//BGD_SHADOW_THRESH, float, 0.85		//BGD Shadow Threshodl Param
//BGD_VAR_TH, int, 32		//disable/enable void area limitataion (black area)
//COURT_FRACTION_LIMIT_FALLBACK, float, 2.8
//COURT_FRACTION_LIMIT_TRANSITION, float, 2.8
//DEBUG_DISPLAY_BACKGROUND_MODEL, bool, false		//Add BG output to Metadata frame
//DETECT_BALL, bool, true
DUMP_INSTRUCTIONS, bool, true
//DumpClassifier, bool, false		//Dumping classifier results into dump\ClassifierResults.txt (the dump folder must be available inside the  working configuration path)
//EnableBallClassifier, bool, true		//Enabling Basketball ball classifier for AP
//FALLBACK_ZOOM_LEVEL, double, 0.8		//percentage of court height (1 -> at yWorld == courtHeight, 0-> at yWorld == 0),  taken when in fallback (can also be bigger/smaller than 1 e.g. 1.05, -0.2)
//FAST_SPEED_TH, double, 5.3
//FIXED_WIDTH_VOLLEYBALL_DISTANCE, double, 15.0		//For fixed width frame in volleyball this is the distance in meters
//FOCUS_ON_BALL_IF_FOUND_IN_BASKETBALL, bool, false		//use ball as focus point if detected, as well as other logics. it may widen the frame, but reduce risk of missing the ball. by default it is enabled.
//FORCE_SUPERMONO_BALL, bool, false		//Take only balls that are  supermonotonous
//FRAME_MINIMUM_GROUND_IN_RATIO, double, 0.8		//minimum low border of production frame, in court ratio
//FRAME_MINIMUM_HEIGHT, double, 4.2		//minimum height from ground (in meters) ï¿½ i.e. the frame will not get lower than this height
//LED_SUPPORT, bool, false
//LEDs_AUTODETECT_ENABLE, bool, false
//LEDs_BGD_HIST_TH, float, 10.0
//LEDs_HEIGHT_IN_METERS, float, 2.0
//LEDs_INCLUDE_REFLECTIVE_AREA, bool, true
//LEDs_LED_HIST_TH, float, 8.0
//LEDs_PLAYERS_HIST_TH, float, 1.2
//LIMIT_VOID_AREAS, bool, false		//avoid black/void areas by limiting frame within FOV polygon bounds
//LIMIT_ZOOM_FACTOR, double, 0.42		//Limit amount of zoom factor in final frame decision
//LOWER_LOW_LATENCY, bool, false		//Lower Low latency parameter for ensuring <1.8 sec for AP Delay (instead of 2.75 Sec in regular LL)
//MASK_COURT_SIDES_FROM_BALL, bool, true
//MIN_METERS_WIDTH_LOW_LATENCY_BASKETBALLTACTICAL, double, 7.5		//Parameter for basketballtactical low latency - which determines the minimum frame width for low latency. 
//REJECT_SHADOW_BALLS, bool, false		//Option to reject balls that are inside shadow through most of their trajectory
//TIME_BEFORE_OFF_GAME, double, 2.0
//USE_FIXED_WIDTH_VOLLEYBALL, bool, true		//Parameter whether to use a fixed width frame during DYNAMIC_TO_RIGHT and DYNAMIC_TO_LEFT in volleyball
//VELOCITY_CALC_USING_FPS, bool, true
//VIEW_ALL_PLAYERS, bool, false		//if true disable focus on a certain group of players and try to catch all players in frame
//VOLLEYBALL_ENABLE_SERVE_EXIT_FALLBACK, bool, false		//Use serve exit player-dependent rule when ball detection rate is very low
VOLLEYBALL_MASK_DOWN, float, 0.25		//Court mask bottom addition for player detection, must be positive
VOLLEYBALL_MASK_SIDE, float, 6.0		//Court mask side addition for player detection
VOLLEYBALL_MASK_UP, float, 0.5		//Margin to consider for Mask, must be positive !
//VOLLEYBALL_MIN_DIST_FOR_SERVE, double, 0.0		//Minimum distance from line a player stands to detect a serve 
//ZOOM_OUT_FACTOR, double, 1.0		//Zoom out on final decision frame by a factor

[BASKETBALL_OFFLINE]
//AMERICAN_FOOTBALL_HL_FRAME_SIZE, int, 224		//A parameter for determining the frame size for the HL American football generation (224 - GooglNet, VGG etc.)
CREATE_TIMESTAMPS_FILE, bool, true		//Option to set useOriginalTimestamps or use counter to generate frames numbers
//DEBUG_BALL_PRINT_DATA, string, classifier		//output data in ball debug video: classifier / area
DEBUG_DISPLAY_BACKGROUND_MODEL, bool, false
DEBUG_METADATA_ON_FRAME, bool, false
DEBUG_MODE, string, write_video
DEBUG_SYNC_BACKGROUND_AND_METADATA, bool, false		//Debug parameter for syncing BG Model with output Metadata
//DUMP_MASK_VIDEO, bool, false		//parameter for dumping output Calibration Mask for HD
//gpuMemoryFraction, double, 0.75		//Highlighter Memory Fraction (for useage with TF 1.13 and Above)
InitialFrame, int, 1
IS_OFFLINE, bool, false
OriginalFPS, int, 25
PathInputAvi, string, Pano_in.mp4
SAMPLE_RATE_FRAMES_DEBUG_AMERICAN_FOOTBALL_HL, int, 5		//A parameter for debug purposes for controlling the amount of frames to sample from each activity play in american football highlights
//SAVE_IMAGES_AMERICANFOOTBALL_HL, bool, false		//Parameter for determining whether to save images to a directory : ../Outputs/ver_num/Highlights_American_Football
SHOW_FRAME_ON_PANO, bool, false

